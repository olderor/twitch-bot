{
    "!kappa" : "def process():\n    SendMessage(\"Kappa\")\nprocess()",
    "kappa" : "def process():\n    SendMessage(\"Kappa\")\nprocess()",
    "!ask" : "def process():\n    def MagicBall(username):\n        answers = [\"Бесспорно\", \"Предрешено\", \"Никаких сомнений\", \"Определённо да\", \"Можешь быть уверен в этом\", \"Мне кажется — 'да'\", \"Вероятнее всего\", \"Хорошие перспективы\", \"Знаки говорят — 'да'\", \"Да\", \"Пока не ясно, попробуй снова\", \"Спроси позже\", \"Лучше не рассказывать\", \"Сейчас нельзя предсказать\", \"Сконцентрируйся и спроси опять\", \"Даже не думай\", \"Мой ответ — 'нет'\", \"По моим данным — 'нет'\", \"Перспективы не очень хорошие\", \"Весьма сомнительно\"]\n        if username == \"olderor\":\n            r = random.randint(0, 10)\n            if r == 10:\n                SendMessage(\"olderor всегда прав!\")\n            else:\n                SendMessage(\"@\" + username + \" \" + answers[r])\n        else:\n            SendMessage(\"@\" + username + \" \" + answers[random.randint(0, len(answers) - 1)])\n    if len(messageParts) == 1:\n        SendMessage(\"@\" + username + \" Сначала задай вопрос\")\n    else:\n        MagicBall(username)\nprocess()",
    "!deck" : "def process():\n    if (os.path.exists(CHANNEL + \"/deck.txt\")):\n        f = open(CHANNEL + \"/deck.txt\", \"r\")\n        deck = f.read()\n        f.close()\n        if deck == \"\":\n            SendMessage(\"deck is not set\")\n        else:\n            SendMessage(\"Latest deck is here: \" + deck)\n    else:\n        SendMessage(\"deck is not set\")\nprocess()",
    "!followage" : "def process():\n    \n    def Followage(username, channel = CHANNEL):\n        url = \"https://beta.decapi.me/twitch/followage/\" + channel + \"/\" + username + \"?precision=6\"\n        contents = requests.get(url).text\n        Print(\"request:\" + contents)\n        if (\"is not following\" in contents):\n            SendMessage(username + \" is not following \" + channel)\n        else:\n            SendMessage(username + \" is following \" + channel + \" for \" + contents)\n    if len(messageParts) == 1:\n        Followage(username)\n    elif len(messageParts) == 2:\n        Followage(messageParts[1])\n    else:\n        Followage(messageParts[1], messageParts[2])\nprocess()",
    "!uptime" : "def process():\n    def Uptime():\n        contents = requests.get(\"https://decapi.me/twitch/uptime?channel=\" + CHANNEL).text\n        if contents == \"Channel is not live.\":\n            SendMessage(CHANNEL + \" is not live.\")\n        else:\n            SendMessage(CHANNEL + \" is live for \" + contents)\n    Uptime()\nprocess()",
    "!time" : "def process():\n    def Uptime():\n        contents = requests.get(\"https://decapi.me/twitch/uptime?channel=\" + CHANNEL).text\n        if contents == \"Channel is not live.\":\n            SendMessage(CHANNEL + \" is not live.\")\n        else:\n            SendMessage(CHANNEL + \" is live for \" + contents)\n    Uptime()\nprocess()",
    "!время" : "def process():\n    def Uptime():\n        contents = requests.get(\"https://decapi.me/twitch/uptime?channel=\" + CHANNEL).text\n        if contents == \"Channel is not live.\":\n            SendMessage(CHANNEL + \" is not live.\")\n        else:\n            SendMessage(CHANNEL + \" is live for \" + contents)\n    Uptime()\nprocess()",
    "!live" : "def process():\n    def Uptime():\n        contents = requests.get(\"https://decapi.me/twitch/uptime?channel=\" + CHANNEL).text\n        if contents == \"Channel is not live.\":\n            SendMessage(CHANNEL + \" is not live.\")\n        else:\n            SendMessage(CHANNEL + \" is live for \" + contents)\n    Uptime()\nprocess()",
    "!request" : "def process():\n    song = \" \".join(messageParts[1:]) + \" requested by \" + username\n    f = open(CHANNEL + '/songs.txt', 'a')\n    f.write(song + '\\n')\n    f.close()\n    f = open(CHANNEL + '/songs.txt', 'r')\n    data = f.readlines()\n    f.close()\n    length = len(data)\n    SendMessage(\"song \" + song + \" was successfully added, songs in the queue: \" + str(length))\nprocess()",
    "!songrequest" : "def process():\n    song = \" \".join(messageParts[1:]) + \" requested by \" + username\n    f = open(CHANNEL + '/songs.txt', 'a')\n    f.write(song + '\\n')\n    f.close()\n    f = open(CHANNEL + '/songs.txt', 'r')\n    data = f.readlines()\n    f.close()\n    length = len(data)\n    SendMessage(\"song \" + song + \" was successfully added, songs in the queue: \" + str(length))\nprocess()",
    "!clearsong" : "def process():\n    if not CheckUser(username):\n        return\n    f = open(CHANNEL + '/songs.txt', 'w')\n    f.close()\n    SendMessage(\"song request queue was cleared\")\nprocess()",
    "!clearsongs" : "def process():\n    if not CheckUser(username):\n        return\n    f = open(CHANNEL + '/songs.txt', 'w')\n    f.close()\n    SendMessage(\"song request queue was cleared\")\nprocess()",
    "!clear" : "def process():\n    if not CheckUser(username):\n        return\n    f = open(CHANNEL + '/songs.txt', 'w')\n    f.close()\n    SendMessage(\"song request queue was cleared\")\nprocess()",
    "!get" : "def process():\n    if not CheckUser(username):\n        return\n    f = open(CHANNEL + '/songs.txt', 'r')\n    data = f.readlines()\n    f.close()\n    length = len(data)\n    if length == 0:\n        SendMessage(\"no songs in the queue\")\n        return\n    f = open(CHANNEL + '/songs.txt', 'w')\n    for i in range(1, length):\n        f.write(data[i])\n    f.close()\n    \n    f = open(CHANNEL + '/lastsong.txt', 'w')\n    f.write(data[0])\n    f.close()\n    SendMessage(\"now playing \" + data[0][:-1] + \", songs left: \" + str(length - 1))\nprocess()",
    "!getsong" : "def process():\n    if not CheckUser(username):\n        return\n    f = open(CHANNEL + '/songs.txt', 'r')\n    data = f.readlines()\n    f.close()\n    length = len(data)\n    if length == 0:\n        SendMessage(\"no songs in the queue\")\n        return\n    f = open(CHANNEL + '/songs.txt', 'w')\n    for i in range(1, length):\n        f.write(data[i])\n    f.close()\n    \n    f = open(CHANNEL + '/lastsong.txt', 'w')\n    f.write(data[0])\n    f.close()\n    SendMessage(\"now playing \" + data[0][:-1] + \", songs left: \" + str(length - 1))\nprocess()",
    "!song" : "def process():\n    f = open(CHANNEL + '/lastsong.txt', 'r')\n    data = f.read()\n    f.close()\n    SendMessage(\"last played song is \" + data)\nprocess()",
    "!size" : "def process():\n    f = open(CHANNEL + '/songs.txt', 'r')\n    data = f.readlines()\n    f.close()\n    length = len(data)\n    SendMessage(\"songs in the queue: \" + str(length))\nprocess()",
    "!songssize" : "def process():\n    f = open(CHANNEL + '/songs.txt', 'r')\n    data = f.readlines()\n    f.close()\n    length = len(data)\n    SendMessage(\"songs in the queue: \" + str(length))\nprocess()",
    "!listsize" : "def process():\n    f = open(CHANNEL + '/songs.txt', 'r')\n    data = f.readlines()\n    f.close()\n    length = len(data)\n    SendMessage(\"songs in the queue: \" + str(length))\nprocess()",
    "!topdeck" : "def process():\n    count = 0\n    if (os.path.exists(CHANNEL + '/topdeck.txt')):\n        f = open(CHANNEL + '/topdeck.txt', 'r')\n        data = f.read()\n        f.close()\n        if not data == \"\":\n            count = int(data)\n    count += 1\n    text = str(count)\n    f = open(CHANNEL + '/topdeck.txt', 'w')\n    f.write(text)\n    f.close()\n    SendMessage(\"топдекаю как сучка уже \" + text + \" раз(а)\")\nprocess()",
    "!топдек" : "def process():\n    count = 0\n    if (os.path.exists(CHANNEL + '/topdeck.txt')):\n        f = open(CHANNEL + '/topdeck.txt', 'r')\n        data = f.read()\n        f.close()\n        if not data == \"\":\n            count = int(data)\n    count += 1\n    text = str(count)\n    f = open(CHANNEL + '/topdeck.txt', 'w')\n    f.write(text)\n    f.close()\n    SendMessage(\"топдекаю как сучка уже \" + text + \" раз(а)\")\nprocess()",
    "!pyramid" : "def process():\n    def SendPyramid(text = \"MrDestructoid\"):\n        SendMessage(text)\n        SendMessage(text + \" \" + text)\n        SendMessage(text + \" \" + text + \" \" + text)\n        SendMessage(text + \" \" + text)\n        SendMessage(text)\n    if len(messageParts) > 1:\n        SendPyramid(\" \".join(messageParts[1:]))\n    else:\n        SendPyramid()\nprocess()",
    "!vk" : "def process():\n    SendMessage(\"группа в вк: https://vk.com/zerxamtv + zerxam в вк: https://vk.com/id228197148\")\nprocess()",
    "!вк" : "def process():\n    SendMessage(\"группа в вк: https://vk.com/zerxamtv + zerxam в вк: https://vk.com/id228197148\")\nprocess()",
    "!group" : "def process():\n    SendMessage(\"PogChamp у нас появилась группа в вк PogChamp https://vk.com/zerxamtv PogChamp\")\nprocess()",
    "!группа" : "def process():\n    SendMessage(\"PogChamp у нас появилась группа в вк PogChamp https://vk.com/zerxamtv PogChamp\")\nprocess()",
    "!help" : "def process():\n    SendMessage(\"Список доступных команд: !ask <вопрос> - спроси магический шар, !deck - текущая дека, !followage - узнай, сколько времени подписан на канал, !vk - связаться с \" + CHANNEL + \"'ом, !group - группа в вк, !uptime - узнай, сколько времени идет стрим, !мамка - узнай, сколько здоровья у матери любимого тебе человека, !topdeck - зафиксируй топдек, !songrequest - запрос на музыку на стриме, !song - текущая песня\")\nprocess()",
    "!commands" : "def process():\n    SendMessage(\"Список доступных команд: !ask <вопрос> - спроси магический шар, !deck - текущая дека, !followage - узнай, сколько времени подписан на канал, !vk - связаться с \" + CHANNEL + \"'ом, !group - группа в вк, !uptime - узнай, сколько времени идет стрим, !мамка - узнай, сколько здоровья у матери любимого тебе человека, !topdeck - зафиксируй топдек, !songrequest - запрос на музыку на стриме, !song - текущая песня\")\nprocess()",
    "!remdeck" : "def process():\n    if not CheckUser(username):\n        return\n    f = open(CHANNEL + '/deck.txt', 'w')\n    f.close()\n    SendMessage(\"deck was successfully removed\")\nprocess()",
    "!setdeck" : "def process():\n    if not CheckUser(username):\n        return\n    if len(messageParts) == 1:\n        SendMessage(\"в сообщении необходимо указать ссылку на деку. !setdeck <url>\")\n    else:\n        url = \" \".join(messageParts[1:])\n        f = open(CHANNEL + '/deck.txt', 'w')\n        f.write(url)\n        f.close()\n        SendMessage(\"deck was successfully updated\")\nprocess()",
    "exit" : "def process():\n    if not CheckUser(username):\n        return\n    Exit()\nprocess()",
    "_botexit" : "def process():\n    if not CheckUser(username):\n        return\n    Exit()\nprocess()",    
    "stop" : "def process():\n    if not CheckUser(username):\n        return\n    Exit()\nprocess()",
    "!lol" : "def process():\n    SendMessageAnonymous(\"/timeout \" + username + \" 1\")\nprocess()",
    "+" : "def process():\n    if not CheckUser(username):\n        return\n    SendMessage(\"+\")\nprocess()",
    "!addquestion" : "def process():\n    question = \" \".join(messageParts[1:]) + \", автор - \" + username\n    f = open(CHANNEL + '/questions.txt', 'a')\n    f.write(question + '\\n')\n    f.close()\n    f = open(CHANNEL + '/questions.txt', 'r')\n    data = f.readlines()\n    f.close()\n    length = len(data)\n    SendMessage(\"Вопрос был успешно добавлен, в очереди: \" + str(length))\nprocess()",
    "!getq" : "def process():\n    if not CheckUser(username):\n        return\n    f = open(CHANNEL + '/questions.txt', 'r')\n    data = f.readlines()\n    f.close()\n    length = len(data)\n    if length == 0:\n        SendMessage(\"Нет вопросов FeelsBadMan Добавь новый через команду !addquestion\")\n        return\n    f = open(CHANNEL + '/questions.txt', 'w')\n    for i in range(1, length):\n        f.write(data[i])\n    f.close()\n    \n    f = open(CHANNEL + '/lastquestion.txt', 'w')\n    f.write(data[0])\n    f.close()\n    SendMessage(\"Внимание вопрос! \" + data[0][:-1])\nprocess()",
    "!question" : "def process():\n    f = open(CHANNEL + '/lastquestion.txt', 'r')\n    data = f.read()\n    f.close()\n    if data != \"\":\n        SendMessage(\"Вопрос: \" + data)\n    else:    SendMessage(\"Вопроса нет\")\nprocess()",
    "!answer" : "def process():\n    f = open(CHANNEL + '/lastquestion.txt', 'r')\n    data = f.read()\n    f.close()\n    if data == \"\":\n        return\n    author = data.split(\" \")[-1][:-1]\n    if not CheckUser(username) and author != username or author == messageParts[1]:\n        return\n    f = open(CHANNEL + '/lastquestion.txt', 'w')\n    f.close()\n    points = AddPoints(messageParts[1], 10)\n    SendMessage(\"Поздравляем, \" + messageParts[1] + \" дал правильный ответ на вопрос, теперь у него \" + str(points) + \" очков PogChamp \")\n    \nprocess()",
    "!donate" : "def process():\n    SendMessage(\"закинуть бабла сюда: https://twitch.streamlabs.com/zerxam или http://www.donationalerts.ru/r/zerxam\")\nprocess()",
    "!money" : "def process():\n    SendMessage(\"закинуть бабла сюда: https://twitch.streamlabs.com/zerxam или http://www.donationalerts.ru/r/zerxam\")\nprocess()",
    "!деньги" : "def process():\n    SendMessage(\"закинуть бабла сюда: https://twitch.streamlabs.com/zerxam или http://www.donationalerts.ru/r/zerxam\")\nprocess()",
    "!донат" : "def process():\n    SendMessage(\"закинуть бабла сюда: https://twitch.streamlabs.com/zerxam или http://www.donationalerts.ru/r/zerxam\")\nprocess()",
    "!points" : "def process():\n    if len(messageParts) == 1:\n        points = AddPoints(username, 0)\n        SendMessage(\"У \" + username + \" \" + str(points) + \" очков PogChamp\")\n    else:\n        points = AddPoints(messageParts[1], 0)\n        SendMessage(\"У \" + messageParts[1] + \" \" + str(points) + \" очков PogChamp\")\nprocess()",
    "!очки" : "def process():\n    if len(messageParts) == 1:\n        points = AddPoints(username, 0)\n        SendMessage(\"У \" + username + \" \" + str(points) + \" очков PogChamp\")\n    else:\n        points = AddPoints(messageParts[1], 0)\n        SendMessage(\"У \" + messageParts[1] + \" \" + str(points) + \" очков PogChamp\")\nprocess()",
    "!addpoints" : "def process():\n    if not CheckUser(username):\n        return\n    if len(messageParts) != 3 or not (messageParts[2].isdigit() or messageParts[2].startswith('-') and messageParts[2][1:].isdigit()):\n        SendMessage(\"Wrong format. Use !addpoints <nickname> <number of points>\")\n        return\n    points = AddPoints(messageParts[1], int(messageParts[2]))\n    SendMessage(\"Теперь у \" + messageParts[1] + \" \" + str(points) + \" очков PogChamp\")\nprocess()",
    "!setpoints" : "def process():\n    if not CheckUser(username):\n        return\n    if len(messageParts) != 3 or not (messageParts[2].isdigit() or messageParts[2].startswith('-') and messageParts[2][1:].isdigit()):\n        SendMessage(\"Wrong format. Use !setpoints <nickname> <number of points>\")\n        return\n    points = SetPoints(messageParts[1], int(messageParts[2]))\n    SendMessage(\"Теперь у \" + messageParts[1] + \" \" + str(points) + \" очков PogChamp\")\nprocess()",
    "!дротик" : "def process():\n    if len(messageParts) != 2 or not messageParts[1].isdigit():\n        SendMessage(\"Неправильный формат. Используй !дартс <ставка> чтобы кинуть дротик\")\n        return\n    bet = int(messageParts[1])\n    points = AddPoints(username, 0)\n    if points < bet:\n        SendMessage(\"Недостаточно очков для ставки. Очков: \" + str(points))\n        return\n    r = random.randint(0, 51)\n    \n    print(r)\n    dif = 0\n    if r <= 20 and r != 0 or r == 50:\n        dif = int(bet * (r + 100) / 100)\n        SendMessage(\"Попадание в цель PogChamp \" + username + \" попал в \" + str(r) + \" и получил \" + str(dif) + \" очков бонусов\")\n    else:\n        dif = -bet\n        SendMessage(\"@\" + username + \" Промах NotLikeThis\")\n    AddPoints(username, dif)\nprocess()",
    "!дартс" : "def process():\n    if len(messageParts) != 2 or not messageParts[1].isdigit():\n        SendMessage(\"@\" + username + \" Неправильный формат. Используй !дартс <ставка> чтобы кинуть дротик\")\n        return\n    bet = int(messageParts[1])\n    points = AddPoints(username, 0)\n    if points < bet:\n        SendMessage(\"@\" + username + \" Недостаточно очков для ставки. Очков: \" + str(points))\n        return\n    r = random.randint(0, 51)\n    \n    print(r)\n    dif = 0\n    if r <= 20 and r != 0 or r == 50:\n        dif = int(bet * (r + 100) / 100)\n        SendMessage(\"Попадание в цель PogChamp \" + username + \" попал в \" + str(r) + \" и получил \" + str(dif) + \" очков бонусов\")\n    else:\n        dif = -bet\n        SendMessage(\"@\" + username + \" Промах NotLikeThis\")\n    AddPoints(username, dif)\nprocess()",
    "здарова" : "def process():\n    SendMessage(\"@\" + username + \" HeyGuys\")\nprocess()",
    "дарова" : "def process():\n    SendMessage(\"@\" + username + \" HeyGuys\")\nprocess()",
    "привет" : "def process():\n    SendMessage(\"@\" + username + \" HeyGuys\")\nprocess()",
    "здрастите" : "def process():\n    SendMessage(\"@\" + username + \" HeyGuys\")\nprocess()",
    "здрастие" : "def process():\n    SendMessage(\"@\" + username + \" HeyGuys\")\nprocess()",
    "здрастуте" : "def process():\n    SendMessage(\"@\" + username + \" HeyGuys\")\nprocess()",
    "feelsbadman" : "def process():\n    SendMessage(\"FeelsBadMan 🔫\")\nprocess()",
    "!красиво" : "def process():\n    SendMessage(\"K \" + \" \".join(messageParts[1:]) + \" P \" + \" \".join(messageParts[1:]) + \" A \" + \" \".join(messageParts[1:]) + \" C \" + \" \".join(messageParts[1:]) + \" И \" + \" \".join(messageParts[1:]) + \" B \" + \" \".join(messageParts[1:]) + \" О\")\nprocess()",
    "!bm" : "def process():\n    SendMessage(str(random.randint(0, 10)) + \"/10 BM LUL\")\nprocess()",
    "!бм" : "def process():\n    SendMessage(str(random.randint(0, 10)) + \"/10 BM LUL\")\nprocess()",
    "oceanman" : "def process():\n    SendMessage(\"OCEAN MAN 🌊 😍 Take me by the hand ✋ lead me to the land that you understand 🙌 🌊 OCEAN MAN 🌊 😍 The voyage 🚲 to the corner of the 🌎 globe is a real trip 👌 🌊 OCEAN MAN 🌊 😍 The crust of a tan man 👳 imbibed by the sand 👍 Soaking up the 💦 thirst of the land 💯\")\nprocess()",
    "!oceanman" : "def process():\n    SendMessage(\"OCEAN MAN 🌊 😍 Take me by the hand ✋ lead me to the land that you understand 🙌 🌊 OCEAN MAN 🌊 😍 The voyage 🚲 to the corner of the 🌎 globe is a real trip 👌 🌊 OCEAN MAN 🌊 😍 The crust of a tan man 👳 imbibed by the sand 👍 Soaking up the 💦 thirst of the land 💯\")\nprocess()",
    "any" : ""
}